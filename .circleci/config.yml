version: 2
jobs:
  build:
    docker:
      - image: circleci/openjdk:8-jdk

    working_directory: ~/repo

    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      - setup_remote_docker

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "build.gradle" }}
          - v1-dependencies-

      - run: gradle dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      - run: gradle test

      - run: gradle assemble

      - run: echo $DOCKER_PASSWORD | docker login --username $DOCKER_USERNAME --password-stdin

      - run: docker build -f ci-runner.docker -t aceleradoratw/esqueleto-ci-runner .

      - run: docker push aceleradoratw/esqueleto-ci-runner

    docker:
      - image: cypress/base:8
      - image: aceleradoratw/esqueleto-ci-runner

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
          - npm-dependencies-{{ checksum "testes-funcionais/package.json" }}
          - npm-dependencies-

      - run: npm --prefix testes-funcionais install --verbose

      - run:
          name: Executa testes funcionais com o jar gerado pelo CI
          command: npm --prefix testes-funcionais run ci:run
          environment:
            CYPRESS_baseUrl: http://localhost:8080

  testes-funcionais-pos-deploy:
    docker:
      - image: cypress/base:8

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
          - npm-dependencies-{{ checksum "testes-funcionais/package.json" }}
          - npm-dependencies-

      - run: npm --prefix testes-funcionais install --verbose

      - run:
          name: Executa testes funcionais contra o servidor de integracao logo apos um novo deploy.
          command: npm --prefix testes-funcionais run ci:run
          environment:
            CYPRESS_baseUrl: https://esqueleto-integracao.herokuapp.com

  deploy-integracao:
      docker:
        - image: buildpack-deps:trusty
      steps:
        - checkout
        - run:
            name: Deploy para o ambiente de integracao
            command: |
              git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_INTEGRATION_APP_NAME.git master


workflows:
  version: 2
  standard-build:
    jobs:
      - build

          requires:
            - deploy-integracao
